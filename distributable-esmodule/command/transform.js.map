{"version":3,"sources":["../../source/command/transform.js"],"names":["Command","Path","Package","Transform","Process","process","main","version","command","description","option","action","sourcePath","targetPath","createModuleFromPath","resolve","undefined","encoding","flag","utility","error","console","exit","parseAsync","argv"],"mappings":"AAAA;;AAEA,OAAO,qDAAP;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AAEA,MAAMC,OAAO,GAAGC,OAAhB;;AAEA,eAAeC,IAAf,GAAsB;;AAEpB,MAAI;;AAEFN,IAAAA,OAAO;AACJO,IAAAA,OADH,CACWL,OAAO,CAACK,OADnB;;AAGAP,IAAAA,OAAO;AACJQ,IAAAA,OADH,CACW,2CADX;AAEGC,IAAAA,WAFH,CAEe,oCAFf;AAGGC,IAAAA,MAHH,CAGU,uBAHV,EAGmC,sBAHnC,EAG2D,OAH3D;AAIGA,IAAAA,MAJH,CAIU,eAJV,EAI2B,qDAJ3B,EAIkF,IAJlF;AAKGA,IAAAA,MALH,CAKU,oBALV,EAKgC,kCALhC,EAKoE,sCALpE;AAMGC,IAAAA,MANH,CAMU,OAAOC,UAAP,EAAmBC,UAAnB,EAA+BH,MAA/B,KAA0C;;AAEhD,UAAI;;AAEF;AACA;AACA;;AAEA,cAAMP,SAAS,CAACW,oBAAV,CAA+Bb,IAAI,CAACc,OAAL,CAAaH,UAAb,CAA/B,EAAyDC,UAAU,GAAGZ,IAAI,CAACc,OAAL,CAAaF,UAAb,CAAH,GAA8BG,SAAjG,EAA4G;AAChH,sBAAYN,MAAM,CAACO,QAD6F;AAEhH,kBAAQP,MAAM,CAACQ,IAFiG;AAGhH,qBAAWR,MAAM,CAACS,OAH8F,EAA5G,CAAN;;;AAMD,OAZD,CAYE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAhB,QAAAA,OAAO,CAACkB,IAAR,CAAa,CAAb;AACD;;AAEF,KAzBH;;AA2BA,UAAMtB,OAAO,CAACuB,UAAR,CAAmBnB,OAAO,CAACoB,IAA3B,CAAN;;AAED,GAlCD,CAkCE,OAAOJ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;;AAEF;;AAEDd,IAAI","sourcesContent":["#!/usr/bin/env node\n\nimport '@virtualpatterns/mablung-source-map-support/install'\nimport Command from 'commander'\nimport Path from 'path'\n\nimport { Package } from '../library/package.js'\nimport { Transform } from '../library/transform.js'\n\nconst Process = process\n\nasync function main() {\n\n  try {\n        \n    Command\n      .version(Package.version)\n\n    Command\n      .command('create-module <source-path> [target-path]')\n      .description('Create a module that returns nodes')\n      .option('--encoding <encoding>', 'Encoding of the file', 'utf-8')\n      .option('--flag <flag>', 'Flag used for to write the file, one of \"w\" or \"wx\"', 'wx')\n      .option('--utility <module>', 'Module path of the utility class', '@virtualpatterns/mablung-pug/utility')\n      .action(async (sourcePath, targetPath, option) => {\n\n        try {\n\n          // console.log(`sourcePath = '${Path.resolve(sourcePath)}'`)\n          // console.log(`targetPath = ${targetPath ? `'${Path.resolve(sourcePath)}'` : '(undefined)'}`)\n          // console.log(`--encoding = '${option.encoding}'`)\n\n          await Transform.createModuleFromPath(Path.resolve(sourcePath), targetPath ? Path.resolve(targetPath) : undefined, {\n            'encoding': option.encoding,\n            'flag': option.flag,\n            'utility': option.utility\n          })\n\n        } catch (error) {\n          console.error(error)\n          Process.exit(1)\n        }\n\n      })\n\n    await Command.parseAsync(Process.argv)\n        \n  } catch (error) {\n    console.error(error)\n  }\n\n}\n\nmain()\n"],"file":"transform.js"}
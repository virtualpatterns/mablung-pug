{"version":3,"sources":["../../../source/test/library/scenario.js"],"names":["DefaultSemaphore","ModuleSemaphore","Browser","DefaultBundle","ModuleBundle","DefaultElement","ModuleElement","FileSystem","Format","Is","JSON5","Match","Path","Pug","Transform","Bundle","document","Mutex","FilePath","_URL","fileURLToPath","import","meta","url","Require","_createRequire","Scenario","constructor","path","modifierPattern","modifier","match","not","null","exec","push","lastIndex","name","getName","localPath","dirname","local","pathExistsSync","parse","readFileSync","_path","_modifier","_name","_local","_lock","getReferenceHtml","html","compileFile","replace","createModule","createModuleFromPath","extname","relative","resolve","getNodeHtml","node","map","string","createTextNode","textContent","outerHTML","join","getServerHtml","modulePath","use","module","fn","default","getSource","source","JSON","stringify","formatSource","getBrowserHtml","preBundlePath","basename","postBundlePath","ensureDir","writeFile","browser","launch","page","newPage","content","setContent","evaluate","readFile","div","$","innerHTML","close","createScenarioFromFolder","includePattern","item","readdirSync","scenario","concat","filter","isDirectory","folder","isFile","file","reduce","isMatch","pattern","createScenarioFromFile","flat"],"mappings":"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","sourcesContent":["import DefaultSemaphore, * as ModuleSemaphore from 'await-semaphore'\nimport Browser from 'puppeteer'\nimport DefaultBundle, * as ModuleBundle from 'esbuild'\nimport DefaultElement, * as ModuleElement from 'html-element'\nimport FileSystem from 'fs-extra'\nimport Format from 'pretty'\nimport Is from '@pwn/is'\nimport JSON5 from 'json5'\nimport Match from 'minimatch'\nimport Path from 'path'\nimport Pug from 'pug'\n\nimport { Transform } from '../../index.js'\n\nconst { 'build': Bundle } = DefaultBundle || ModuleBundle\nconst { document } = DefaultElement || ModuleElement\nconst { Mutex } = DefaultSemaphore || ModuleSemaphore\nconst FilePath = __filePath\nconst Require = __require\n\nclass Scenario {\n\n  constructor(path) {\n\n    let modifierPattern = /\\.(\\w*?)[./]/gims\n    let modifier = []\n\n    let match = null\n\n    while (Is.not.null(match = modifierPattern.exec(path))) {\n      modifier.push(match[1])\n      modifierPattern.lastIndex --\n    }\n\n    let name = Scenario.getName(path)\n\n    let localPath = `${Path.dirname(path)}/${name}.json`\n    let local = {}\n  \n    if (FileSystem.pathExistsSync(localPath)) {\n      local = JSON5.parse(FileSystem.readFileSync(localPath, { 'encoding': 'utf-8' }))\n    }\n  \n    this._path = path\n    this._modifier = modifier\n\n    this._name = name\n    this._local = local\n\n    this._lock = new Mutex()\n\n  }\n\n  get path() {\n    return this._path\n  }\n\n  get modifier() {\n    return this._modifier\n  }\n\n  get name() {\n    return this._name\n  }\n\n  get local() {\n    return this._local\n  }\n\n  async getReferenceHtml() {\n\n    let html = null\n    html = Pug.compileFile(this._path)(this._local)\n    html = Format(html)\n\n    html = html.replace(/<(.*?) \\/>/gms, '<$1>')\n\n    return html\n\n  }\n\n  async createModule() {\n    return Transform.createModuleFromPath(this._path, `${Path.dirname(this._path)}/${this._name}${Path.extname(FilePath)}`, { 'utility': Path.relative(Path.dirname(this._path), Require.resolve(`../../library/utility${Path.extname(FilePath)}`)) })\n  }\n\n  getNodeHtml(node) {\n    return node\n      .map((node) => Is.string(node) ? document.createTextNode(node).textContent : node.outerHTML) \n      .join('')\n  }\n\n  async getServerHtml() {\n\n    let modulePath = await this._lock.use(() => this.createModule())\n    let module = await import(modulePath)\n\n    let fn = module.default\n    let node = fn(this._local)\n\n    let html = null\n    html = this.getNodeHtml(node)\n    html = Format(html)\n\n    return html\n    \n  }\n\n  async getSource(modulePath) {\n\n    let source = null\n    source =  ` import ContentFn from './${Path.relative(Path.dirname(modulePath), modulePath)}'\n                let div = document.querySelector('body div')\n                let node = ContentFn(${JSON.stringify(this._local)})\n                node.forEach((node) => div.appendChild(typeof node === 'string' ? document.createTextNode(node) : node))`\n    \n    source = await Transform.formatSource(source)\n\n    return source\n\n  }\n\n  async getBrowserHtml() {\n\n    let modulePath = await this._lock.use(() => this.createModule())\n    let source = await this.getSource(modulePath)\n   \n    let preBundlePath = `${Path.dirname(modulePath)}/${Path.basename(modulePath, Path.extname(modulePath))}-pre-bundle${Path.extname(modulePath)}`\n    let postBundlePath = `${Path.dirname(modulePath)}/${Path.basename(modulePath, Path.extname(modulePath))}-post-bundle${Path.extname(modulePath)}`\n\n    await FileSystem.ensureDir(Path.dirname(preBundlePath))\n    await FileSystem.writeFile(preBundlePath, source, { 'encoding': 'utf-8', 'flag': 'wx' })\n\n    await Bundle({\n      'define': {\n        'global': '\\'global\\'',\n        'process.env.NODE_DEBUG': '\\'process.env.NODE_DEBUG\\'',\n        'process': '\\'process\\''\n      },\n      'entryPoints': [ preBundlePath ],\n      'outfile': postBundlePath,\n      'minify': false,\n      'bundle': true\n    })\n    \n    let browser = await Browser.launch() // { 'devtools': true, 'headless': false })\n\n    try {\n    \n      let page = await browser.newPage()\n\n      let content = null\n      content = ` <!DOCTYPE html>\n                  <html>\n                    <head>\n                      <meta   charset=\"utf-8\">\n                      <meta   name=\"viewport\"\n                              content=\"width=device-width\">\n                    </head>\n                    <body>\n                      <div></div>\n                    </body>\n                  </html>`\n      \n      content = Format(content)\n      \n      await page.setContent(content, { 'timeout': 0, 'waitUntil': 'domcontentloaded' })\n      await page.evaluate(await FileSystem.readFile(postBundlePath, { 'encoding': 'utf-8' }))\n      \n      let div = await page.$('body div')\n\n      let html = null\n      html = await div.evaluate((node) => node.innerHTML)\n      html = Format(html)\n\n      return html\n      \n    } finally {\n      await browser.close()\n    }\n\n  } \n  \n  static getName(name) {\n\n    if (Path.extname(name) === '') {\n      return name\n    } else {\n      return this.getName(Path.basename(name, Path.extname(name)))\n    }\n\n  }\n\n  static createScenarioFromFolder(path) {\n\n    let includePattern = ['*.pug']\n    // let excludePattern = ['*.skip.pug']\n  \n    let item = FileSystem.readdirSync(path, { 'encoding': 'utf-8', 'withFileTypes': true })\n  \n    let scenario = []\n\n    scenario = scenario.concat(item\n      .filter((item) => item.isDirectory())\n      .map((folder) => this.createScenarioFromFolder(`${path}/${folder.name}`)))\n    \n    scenario = scenario.concat(item\n      .filter((item) => item.isFile())\n      .filter((file) => includePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      // .filter((file) => !excludePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      .map((file) => this.createScenarioFromFile(`${path}/${file.name}`)))\n  \n    return scenario.flat()\n  \n  }\n  \n  static createScenarioFromFile(path) {\n    return new Scenario(path)\n  }\n\n}\n\nexport { Scenario }"],"file":"scenario.js"}
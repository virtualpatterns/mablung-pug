{"version":3,"sources":["../../../source/test/library/scenario.js"],"names":["Bundle","DefaultBundle","ModuleBundle","document","DefaultElement","ModuleElement","FilePath","__filename","Require","require","Scenario","constructor","path","local","modifierPattern","modifier","match","Is","not","null","exec","push","lastIndex","_path","_local","_modifier","getReferenceHtml","html","Pug","compileFile","replace","getServerHtml","name","getName","extension","Path","extname","sourcePath","targetPath","dirname","utilityPath","relative","resolve","Transform","createModuleFromPath","module","fn","default","node","map","string","createTextNode","textContent","outerHTML","join","getBrowserHtml","source","JSON","stringify","formatSource","preBundlePath","postBundlePath","FileSystem","ensureDir","writeFile","browser","Browser","launch","page","newPage","content","setContent","evaluate","readFile","div","$","innerHTML","close","basename","createScenarioFromFolder","includePattern","excludePattern","item","readdirSync","scenario","concat","filter","isDirectory","folder","isFile","file","reduce","isMatch","pattern","createScenarioFromFile","flat","localPath","pathExistsSync","JSON5","parse","readFileSync"],"mappings":"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","sourcesContent":["import Browser from 'puppeteer'\nimport DefaultBundle, * as ModuleBundle from 'esbuild'\nimport DefaultElement, * as ModuleElement from 'html-element'\nimport FileSystem from 'fs-extra'\nimport Format from 'pretty'\nimport Is from '@pwn/is'\nimport JSON5 from 'json5'\nimport Match from 'minimatch'\nimport Path from 'path'\nimport Pug from 'pug'\n\nimport { Transform } from '../../index.js'\n\nconst { 'build': Bundle } = DefaultBundle || ModuleBundle\nconst { document } = DefaultElement || ModuleElement\nconst FilePath = __filePath\nconst Require = __require\n\nclass Scenario {\n\n  constructor(path, local = {}) {\n\n    let modifierPattern = /\\.(\\w*?)[./]/gims\n    let modifier = []\n\n    let match = null\n\n    while (Is.not.null(match = modifierPattern.exec(path))) {\n      modifier.push(match[1])\n      modifierPattern.lastIndex --\n    }\n\n    this._path = path\n    this._local = local\n    this._modifier = modifier\n\n  }\n\n  get path() {\n    return this._path\n  }\n\n  get local() {\n    return this._local\n  }\n\n  get modifier() {\n    return this._modifier\n  }\n\n  async getReferenceHtml() {\n\n    let html = null\n    html = Pug.compileFile(this._path)(this._local)\n    html = Format(html)\n\n    html = html.replace(/<(.*?) \\/>/gim, '<$1>')\n\n    return html\n\n  }\n\n  async getServerHtml() {\n\n    let name = Scenario.getName(this._path)\n    let extension = Path.extname(FilePath)\n\n    let sourcePath = this._path\n    let targetPath = `${Path.dirname(sourcePath)}/${name}-server${extension}`\n    let utilityPath = Path.relative(Path.dirname(targetPath), Require.resolve(`../../library/utility${extension}`))\n\n    await Transform.createModuleFromPath(sourcePath, targetPath, { 'utility': utilityPath })\n\n    // __transformPath does ...\n    //   URL.pathToFileURL if the environment is ESModule\n    //   require.resolve if the environment is CommonJS\n    let module = await import(__transformPath(targetPath))\n    let fn = module.default || module\n    let node = fn(this._local)\n\n    let html = null\n    html = node.map((node) => Is.string(node) ? document.createTextNode(node).textContent : node.outerHTML) \n    html = html.join('')\n    html = Format(html)\n\n    return html\n    \n  }\n\n  async getBrowserHtml() {\n\n    let name = Scenario.getName(this._path)\n    let extension = Path.extname(FilePath)\n\n    let sourcePath = this._path\n    let targetPath = `${Path.dirname(sourcePath)}/${name}-browser${extension}`\n    let utilityPath = Path.relative(Path.dirname(targetPath), Require.resolve(`../../library/utility${extension}`))\n\n    await Transform.createModuleFromPath(sourcePath, targetPath, { 'utility': utilityPath })\n\n    let source = null\n    source = `  import ContentFn from './${Path.relative(Path.dirname(sourcePath), targetPath)}'\n                let local = ${JSON.stringify(this._local)}\n                let node = ContentFn(local)\n                let div = document.querySelector('body div')\n                node.forEach((node) => div.appendChild(typeof node === 'string' ? document.createTextNode(node) : node))`\n   \n    source = await Transform.formatSource(source)\n    \n    let preBundlePath = `${Path.dirname(sourcePath)}/${name}-browser-pre${extension}`\n    let postBundlePath = `${Path.dirname(sourcePath)}/${name}-browser-post${extension}`\n\n    await FileSystem.ensureDir(Path.dirname(preBundlePath))\n    await FileSystem.writeFile(preBundlePath, source, { 'encoding': 'utf-8', 'flag': 'wx' })\n\n    await Bundle({\n      'define': {\n        'global': '\\'global\\'',\n        'process.env.NODE_DEBUG': '\\'process.env.NODE_DEBUG\\'',\n        'process': '\\'process\\''\n      },\n      'entryPoints': [ preBundlePath ],\n      'outfile': postBundlePath,\n      'minify': false,\n      'bundle': true\n    })\n\n    // let host = '0.0.0.0'\n    // let port = Path.extname(FilePath) === '.cjs' ? 8080 : 8081\n\n    // Server.start({\n    //   'host': host,\n    //   'port': port,\n    //   'logLevel': 0,\n    //   'mount': [\n    //     [ '/', `${FolderPath}/www` ],\n    //     [ '/favicon.ico', `${FolderPath}/www/resource/application.ico` ]\n    //   ],\n    //   'open': false\n    // })\n\n    // try {\n    \n    let browser = await Browser.launch() // { 'devtools': true, 'headless': false })\n\n    try {\n    \n      let page = await browser.newPage()\n\n      // page.on('console', async (message) => {\n\n      //   switch (message.type().toLowerCase()) {\n      //     case 'log':\n      //       console.log(message.text())\n      //       break\n      //     case 'dir':\n      //       console.dir(await message.args()[0].jsonValue(), { 'depth': null })\n      //       break\n      //   }\n\n      // })\n\n      // await page.goto(`http://${host}:${port}/index.html`)\n      let content = null\n      content = ` <!DOCTYPE html>\n                  <html>\n                    <head>\n                      <meta   charset=\"utf-8\">\n                      <meta   name=\"viewport\"\n                              content=\"width=device-width\">\n                    </head>\n                    <body>\n                      <div></div>\n                    </body>\n                  </html>`\n      \n      content = Format(content)\n      \n      await page.setContent(content, { 'timeout': 0, 'waitUntil': 'domcontentloaded' })\n      await page.evaluate(await FileSystem.readFile(postBundlePath, { 'encoding': 'utf-8' }))\n      \n      let div = await page.$('body div')\n\n      let html = null\n      html = await div.evaluate((node) => node.innerHTML)\n      html = Format(html)\n\n      return html\n      \n    } finally {\n      await browser.close()\n    }\n\n    // } finally {\n    //   Server.shutdown()\n    // }\n\n  } \n  \n  static getName(name) {\n\n    if (Path.extname(name) === '') {\n      return name\n    } else {\n      return this.getName(Path.basename(name, Path.extname(name)))\n    }\n\n  }\n\n  static createScenarioFromFolder(path, includePattern = [ '*.pug' ], excludePattern = [ '*.skip.pug' ]) {\n  \n    let item = FileSystem.readdirSync(path, { 'encoding': 'utf-8', 'withFileTypes': true })\n  \n    let scenario = []\n\n    scenario = scenario.concat(item\n      .filter((item) => item.isDirectory())\n      .map((folder) => this.createScenarioFromFolder(`${path}/${folder.name}`, includePattern, excludePattern)))\n\n    scenario = scenario.concat(item\n      .filter((item) => item.isFile())\n      .filter((file) => includePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      .filter((file) => !excludePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      .map((file) => this.createScenarioFromFile(`${path}/${file.name}`)))\n  \n    return scenario.flat()\n  \n  }\n  \n  static createScenarioFromFile(path) {\n\n    let localPath = `${Path.dirname(path)}/${this.getName(path)}-local.json`\n    let local = {}\n  \n    if (FileSystem.pathExistsSync(localPath)) {\n      local = JSON5.parse(FileSystem.readFileSync(localPath, { 'encoding': 'utf-8' }))\n    }\n  \n    return new Scenario(path, local)\n  \n  }\n\n}\n\nexport { Scenario }"],"file":"scenario.cjs"}
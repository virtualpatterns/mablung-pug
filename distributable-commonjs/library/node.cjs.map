{"version":3,"sources":["../../source/library/node.js"],"names":["ParameterCase","DefaultChangeCase","ModuleChangeCase","FilePath","__filename","Node","constructor","node","option","_node","_option","getSource","createNode","extension","Path","extname","toLowerCase","nodeClass","type","default"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;AAEA;AACA,MAAM;AAAE,eAAaA;AAAf,IAAiCC,4BAAqBC,gBAA5D;AACA,MAAMC,QAAQ,GANdC,UAMA;;AAEA,MAAMC,IAAN,CAAW;AAETC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;AACxB,SAAKC,KAAL,GAAaF,IAAb;AACA,SAAKG,OAAL,GAAeF,MAAf;AACD;;AAED,QAAMG,SAAN,GAAkB,CAAE;;AAEpB,eAAaC,UAAb,CAAwBL,IAAxB,EAA8BC,MAA9B,EAAsC;AAEpC,QAAIK,SAAS,GAAG,IAAhB;AACAA,IAAAA,SAAS,GAAGC,cAAKC,OAAL,CAAaZ,QAAb,CAAZ;AACAU,IAAAA,SAAS,GAAGA,SAAS,CAACG,WAAV,EAAZ;AAEA,QAAIC,SAAS,GAAG,IAAhB;AACAA,IAAAA,SAAS,GAAG,sBAAc,UAASjB,aAAa,CAACO,IAAI,CAACW,IAAN,CAAY,QAAOL,SAAU,EAAjE,gDAAZ;AACAI,IAAAA,SAAS,GAAGA,SAAS,CAACE,OAAV,IAAqBF,SAAjC;AAEA,WAAO,IAAIA,SAAJ,CAAcV,IAAd,EAAoBC,MAApB,CAAP;AAED,GArBQ,CAuBT;AACA;AACA;;;AAzBS,C,CA6BX;;;eAEeH,I","sourcesContent":["// import DefaultConvert, * as ModuleConvert from 'html-to-hyperscript'\nimport DefaultChangeCase, * as ModuleChangeCase from 'change-case'\nimport Path from 'path'\n\n// const { 'htmlToHs': Convert } = DefaultConvert || ModuleConvert\nconst { 'paramCase': ParameterCase } = DefaultChangeCase || ModuleChangeCase\nconst FilePath = __filePath\n\nclass Node {\n\n  constructor(node, option) {\n    this._node = node\n    this._option = option\n  }\n\n  async getSource() {}\n\n  static async createNode(node, option) {\n\n    let extension = null\n    extension = Path.extname(FilePath)\n    extension = extension.toLowerCase()\n\n    let nodeClass = null\n    nodeClass = await import(`./node/${ParameterCase(node.type)}-node${extension}`)\n    nodeClass = nodeClass.default || nodeClass\n\n    return new nodeClass(node, option)\n\n  }\n\n  // static async convertToHyperScript(...parameter) {\n  //   return this._convert(...parameter).replace(/h\\((.*?)\\)/gims, '__utility.createNode($1)')\n  // }\n\n}\n\n// Node._convert = Convert({ 'syntax': 'h', 'tabSize': 2 })\n\nexport default Node"],"file":"node.cjs"}
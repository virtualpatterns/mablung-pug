{"version":3,"sources":["../../../source/test/library/transform-00.test.js"],"names":["Path","Test","Transform","UnsupportedAttributeTransformError","UnsupportedCodeTransformError","UnsupportedCommentTransformError","UnsupportedDocTypeTransformError","UnsupportedTagTransformError","FilePath","_URL","fileURLToPath","import","meta","url","FolderPath","dirname","Require","_createRequire","test","notThrowsAsync","getAstFromPath","resolve","getSourceFromPath","getFunctionSourceFromPath","forEach","path","relative","throwsAsync","getFunctionFromPath"],"mappings":"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","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\n\nimport { Transform } from '../../index.js'\n\nimport { UnsupportedAttributeTransformError } from '../../index.js'\nimport { UnsupportedCodeTransformError } from '../../index.js'\nimport { UnsupportedCommentTransformError } from '../../index.js'\nimport { UnsupportedDocTypeTransformError } from '../../index.js'\nimport { UnsupportedTagTransformError } from '../../index.js'\n\nconst FilePath = __filePath\nconst FolderPath = Path.dirname(FilePath)\nconst Require = __require\n\nTest('getAstFromPath(path)', async (test) => {\n  await test.notThrowsAsync(Transform.getAstFromPath(Require.resolve('./resource/transform-00/00-default.pug')))\n})\n\nTest('getSourceFromPath(path)', async (test) => {\n  await test.notThrowsAsync(Transform.getSourceFromPath(Require.resolve('./resource/transform-00/00-default.pug')))\n})\n\nTest('getFunctionSourceFromPath(path)', async (test) => {\n  await test.notThrowsAsync(Transform.getFunctionSourceFromPath(Require.resolve('./resource/transform-00/00-default.pug')))\n})\n\n;[ \n  Require.resolve('./resource/transform-00/attribute/07-escaped-attributes.pug') \n].forEach((path) => {\n\n  Test(`getFunctionFromPath('${Path.relative(`${FolderPath}/resource/transform-00`, path)}') throws UnsupportedAttributeTransformError`, async (test) => {\n    await test.throwsAsync(Transform.getFunctionFromPath(path), { 'instanceOf': UnsupportedAttributeTransformError })\n  })\n  \n})\n\n;[ \n  Require.resolve('./resource/transform-00/code/04-escaped-buffered-code.pug'),\n  Require.resolve('./resource/transform-00/code/05-escaped-buffered-inline-code.pug')\n].forEach((path) => {\n\n  Test(`getFunctionFromPath('${Path.relative(`${FolderPath}/resource/transform-00`, path)}') throws UnsupportedCodeTransformError`, async (test) => {\n    await test.throwsAsync(Transform.getFunctionFromPath(path), { 'instanceOf': UnsupportedCodeTransformError })\n  })\n\n})\n\n;[ \n  Require.resolve('./resource/transform-00/comment/00-default-buffered.pug'),\n  Require.resolve('./resource/transform-00/comment/02-block-buffered-comment.pug')\n].forEach((path) => {\n\n  Test(`getFunctionFromPath('${Path.relative(`${FolderPath}/resource/transform-00`, path)}') throws UnsupportedCommentTransformError`, async (test) => {\n    await test.throwsAsync(Transform.getFunctionFromPath(path), { 'instanceOf': UnsupportedCommentTransformError })\n  })\n\n})\n\n;[ \n  Require.resolve('./resource/transform-00/doctype/00-default.pug')\n].forEach((path) => {\n\n  Test(`getFunctionFromPath('${Path.relative(`${FolderPath}/resource/transform-00`, path)}') throws UnsupportedDocTypeTransformError`, async (test) => {\n    await test.throwsAsync(Transform.getFunctionFromPath(path), { 'instanceOf': UnsupportedDocTypeTransformError })\n  })\n\n})\n\n;[ \n  Require.resolve('./resource/transform-00/tag/02-self-closing-tag.pug')\n].forEach((path) => {\n\n  Test(`getFunctionFromPath('${Path.relative(`${FolderPath}/resource/transform-00`, path)}') throws UnsupportedTagTransformError`, async (test) => {\n    await test.throwsAsync(Transform.getFunctionFromPath(path), { 'instanceOf': UnsupportedTagTransformError })\n  })\n\n})\n"],"file":"transform-00.test.js"}